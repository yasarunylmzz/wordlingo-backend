name: Deploy to Test Environment

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.DOT_ENV }}" ]; then echo "DOT_ENV is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "SSH_KEY is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_IP }}" ]; then echo "SSH_IP is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SSH_USER }}" ]; then echo "SSH_USER is not set!" >&2; exit 1; fi

      - name: Create .env file
        run: |
          umask 077
          echo "${{ secrets.DOT_ENV }}" > .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: NODE_ENV=test

  deploy:
    name: Deploy to Test Environment
    needs: build
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_IP }} >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_IP: ${{ secrets.SSH_IP }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_IP << 'EOF'
            set -e

            echo ">>> Logging into GitHub Container Registry"
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo ">>> Pulling Docker Image"
            docker pull ghcr.io/${{ github.repository }}:test

            echo ">>> Stopping Old Containers"
            docker stop $(docker ps -q --filter ancestor=ghcr.io/${{ github.repository }}:test) || true

            echo ">>> Starting New Container"
            docker run -d --rm \
              --env-file .env \
              -p 3000:3000 \
              ghcr.io/${{ github.repository }}:test

            echo ">>> Running Migrations"
            docker exec $(docker ps -q --filter ancestor=ghcr.io/${{ github.repository }}:test) npm run migration:run
          EOF

      - name: Deployment Status
        run: |
          if [ "$?" -eq 0 ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi
