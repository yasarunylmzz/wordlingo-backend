name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  actions: read

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Validate secrets
        run: |
          if [ -z "${{ secrets.SSH_KEY }}" ]; then echo "SSH_KEY is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.SERVER_IP }}" ]; then echo "SERVER_IP is not set!" >&2; exit 1; fi
          if [ -z "${{ secrets.GH_TOKEN }}" ]; then echo "GH_TOKEN is not set!" >&2; exit 1; fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/yasarunylmzz/wordlingo-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to DigitalOcean
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            # Doğru dizine git
            cd /home/ubuntu/wordlingo-backend/wordlingo-backend || exit 1

            # GHCR'ye giriş yap
            echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # Eski container'ları ve image'ları temizle
            docker-compose down
            docker system prune -af

            # GHCR'den en güncel image'ı çek
            docker-compose pull

            # Container'ları yeniden başlat
            docker-compose up -d

            # Çalışan container'ları kontrol et
            docker-compose ps
